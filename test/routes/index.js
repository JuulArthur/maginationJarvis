"use strict";
var mongoose = require('mongoose');
var mockgoose = require('mockgoose');
var request = require('supertest');
var chai = require('chai');
var should = chai.should();
var assert = chai.assert;
module.exports = (function(models, app) {
  describe("Auth", (function() {
    var url = "http://localhost:3000";
    var testUser = {
      username: "test",
      password: "test121312313"
    };
    before((function(done) {
      new models.User(testUser).save((function(err, usr) {
        should.not.exist(err);
        done();
      }));
    }));
    after((function(done) {
      models.User.remove({}, done);
    }));
    it('should be usable', (function(done) {
      request(app).get('/api/election').set('Accept', 'application/json').expect('Content-Type', /json/).expect(200, done);
    }));
  }));
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Qvcm91dGVzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsVUFBUyxDQUFDLENBQUM7QUFDbEMsQUFBSSxFQUFBLENBQUEsU0FBUSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsV0FBVSxDQUFDLENBQUM7QUFDcEMsQUFBSSxFQUFBLENBQUEsT0FBTSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsV0FBVSxDQUFDLENBQUM7QUFDbEMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsTUFBSyxFQUFJLENBQUEsSUFBRyxPQUFPLEFBQUMsRUFBQyxDQUFDO0FBQzFCLEFBQUksRUFBQSxDQUFBLE1BQUssRUFBSSxDQUFBLElBQUcsT0FBTyxDQUFDO0FBRXhCLEtBQUssUUFBUSxJQUFJLFNBQUMsTUFBSyxDQUFHLENBQUEsR0FBRTtBQUN4QixTQUFPLEFBQUMsQ0FBQyxNQUFLLEdBQUcsU0FBQSxBQUFDO0FBQ2QsQUFBSSxNQUFBLENBQUEsR0FBRSxFQUFJLHdCQUFzQixDQUFDO0FBQ2pDLEFBQUksTUFBQSxDQUFBLFFBQU8sRUFBSTtBQUNYLGFBQU8sQ0FBRyxPQUFLO0FBQ2YsYUFBTyxDQUFHLGdCQUFjO0FBQUEsSUFDNUIsQ0FBQztBQUNELFNBQUssQUFBQyxFQUFDLFNBQUEsSUFBRztBQUNOLFFBQUksQ0FBQSxNQUFLLEtBQUssQUFBQyxDQUFDLFFBQU8sQ0FBQyxLQUFLLEFBQUMsRUFBQyxTQUFDLEdBQUUsQ0FBRyxDQUFBLEdBQUUsQ0FBSztBQUN4QyxhQUFLLElBQUksTUFBTSxBQUFDLENBQUMsR0FBRSxDQUFDLENBQUM7QUFDckIsV0FBRyxBQUFDLEVBQUMsQ0FBQztNQUNWLEVBQUMsQ0FBQztJQUNOLEVBQUMsQ0FBQztBQUNGLFFBQUksQUFBQyxFQUFDLFNBQUEsSUFBRyxDQUFLO0FBQ1YsV0FBSyxLQUFLLE9BQU8sQUFBQyxDQUFDLEVBQUMsQ0FBRyxLQUFHLENBQUMsQ0FBQztJQUNoQyxFQUFDLENBQUM7QUFDRixLQUFDLEFBQUMsQ0FBQyxrQkFBaUIsR0FBRyxTQUFBLElBQUcsQ0FBRztBQUN6QixZQUFNLEFBQUMsQ0FBQyxHQUFFLENBQUMsSUFDSixBQUFDLENBQUMsZUFBYyxDQUFDLElBQ2pCLEFBQUMsQ0FBQyxRQUFPLENBQUcsbUJBQWlCLENBQUMsT0FDM0IsQUFBQyxDQUFDLGNBQWEsQ0FBRyxPQUFLLENBQUMsT0FDeEIsQUFBQyxDQUFDLEdBQUUsQ0FBRyxLQUFHLENBQUMsQ0FBQztJQUMxQixFQUFDLENBQUM7RUFDTixFQUFDLENBQUM7QUFDTixDQUFBLENBQUM7QUFBQSIsImZpbGUiOiJ0ZXN0L3JvdXRlcy9pbmRleC5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLiIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG52YXIgbW9ja2dvb3NlID0gcmVxdWlyZSgnbW9ja2dvb3NlJyk7XG52YXIgcmVxdWVzdCA9IHJlcXVpcmUoJ3N1cGVydGVzdCcpO1xudmFyIGNoYWkgPSByZXF1aXJlKCdjaGFpJyk7XG52YXIgc2hvdWxkID0gY2hhaS5zaG91bGQoKTtcbnZhciBhc3NlcnQgPSBjaGFpLmFzc2VydDtcblxubW9kdWxlLmV4cG9ydHMgPSAobW9kZWxzLCBhcHApID0+IHtcbiAgICBkZXNjcmliZShcIkF1dGhcIiwgKCk9PiB7XG4gICAgICAgIHZhciB1cmwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMFwiO1xuICAgICAgICB2YXIgdGVzdFVzZXIgPSB7XG4gICAgICAgICAgICB1c2VybmFtZTogXCJ0ZXN0XCIsXG4gICAgICAgICAgICBwYXNzd29yZDogXCJ0ZXN0MTIxMzEyMzEzXCJcbiAgICAgICAgfTtcbiAgICAgICAgYmVmb3JlKGRvbmUgPT4ge1xuICAgICAgICAgICAgbmV3IG1vZGVscy5Vc2VyKHRlc3RVc2VyKS5zYXZlKChlcnIsIHVzcik9PiB7XG4gICAgICAgICAgICAgICAgc2hvdWxkLm5vdC5leGlzdChlcnIpO1xuICAgICAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgYWZ0ZXIoZG9uZSA9PiB7XG4gICAgICAgICAgICBtb2RlbHMuVXNlci5yZW1vdmUoe30sIGRvbmUpO1xuICAgICAgICB9KTtcbiAgICAgICAgaXQoJ3Nob3VsZCBiZSB1c2FibGUnLCBkb25lPT57XG4gICAgICAgICAgICByZXF1ZXN0KGFwcClcbiAgICAgICAgICAgICAgICAuZ2V0KCcvYXBpL2VsZWN0aW9uJylcbiAgICAgICAgICAgICAgICAuc2V0KCdBY2NlcHQnLCAnYXBwbGljYXRpb24vanNvbicpXG4gICAgICAgICAgICAgICAgLmV4cGVjdCgnQ29udGVudC1UeXBlJywgL2pzb24vKVxuICAgICAgICAgICAgICAgIC5leHBlY3QoMjAwLCBkb25lKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59OyJdfQ==